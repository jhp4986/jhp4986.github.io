{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/TypeScript","result":{"pageContext":{"currentCategory":"TypeScript","categories":["All","TypeScript","Retrospective","React","AWS","HTML&CSS","Git"],"edges":[{"node":{"id":"f369f00d-b70a-5f32-8c64-debd09293c60","excerpt":"TypeScript 란 ? 타입스크립트 ( TypeScript ) 는 자바스크립트의 슈퍼셋인 오픈소스 프로그래밍 언어이다. \n(JavaScript 대용품 같은 언어) 마이크로소프트에서 개발, 유지하고 있으며 “엄격” 한 문법을 지원한다. \n자바스크립트 엔진을 사용하면서 커다란 애플리케이션을 개발할 수 있게 설계 되었다.\n자바스크립트의 슈퍼셋이기 때문에 자바스크립트로 작성된 프로그램이 타입스크립트 프로그램으로도 동작 한다.\n 자바스크립트에서 타입 부분을 조금 업그레이드 해서 쓸 수 있는 자바스크립트 업그레이드 버전이라고 생각 하면 된다.\n TypeScript 를 쓰는 이유 자바스크립트는 다이나믹 타이핑을 제공하는 언어이기 때문에 숫자와 문자가 만났을때 숫자로 바꿔서 연산을 하게 된다. \n다이나믹 타이핑은 편리하지만 프로젝트 사이즈가 커지게 되면 오히려 단점으로 적용이 될 수 있다.\n\n코드가 길어지면 길어질수록 자유도 & 유연성은 오히려 우리에게 좋지 않다.  그래서 TypeScrip…","fields":{"slug":"/ts-blog/필수문법/"},"frontmatter":{"categories":"TypeScript","title":"TypeScript - 필수 문법","date":"May 01, 2023"}},"next":{"fields":{"slug":"/ts-blog/타입추론/"}},"previous":null},{"node":{"id":"cfd29528-e95e-5e1c-b96a-1657535f514b","excerpt":"Static Typing 타입스크립트의 가장 독특한 특징은 Static Typing 이라고 불리는 정적 타이핑 기능을 자바스크립트 언어에 제공을 한다.\n\nStatic Typing 이란 타입을 선언하고 선언된 타입에 맞는 값 만 할당 또는 반환 되어야 된다는 뜻이다. Type Inference ( 타입 추론) 타입스크립트에서는 타입 표기가 없는 경우 코드를 읽고 분석하여 타입을 유추해낼수 있다.  👇 🙅‍♂️ 사진 👇 🙆‍♂️ 사진  예시 사진\n student 라는 이름을 갖고 있는 객체가 있는데 TypeScript 는 스스로 객체 속에 property 할당 값을 검사하고 어떠한 타입이 property에 할당 값으로 주어졌는지 확인을 한다. 또한 이런 할당 값의 타입을 바탕으로 객체의 property에 타입 추론을 적용 한다.\n따라서 string 이 할당 값으로 주어진 name property 를 number 로 재 할당 하려고 하면 error 메세지를 보낸다. 사진 return 타입을 가진 …","fields":{"slug":"/ts-blog/타입추론/"},"frontmatter":{"categories":"TypeScript","title":"TypeScript - 타입추론 (Type Inference)","date":"May 01, 2023"}},"next":{"fields":{"slug":"/retrospective-blog/기업협업/"}},"previous":{"fields":{"slug":"/ts-blog/필수문법/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}