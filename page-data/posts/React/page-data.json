{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/React","result":{"pageContext":{"currentCategory":"React","categories":["All","React","AWS","Git","HTML&CSS"],"edges":[{"node":{"id":"79d704f2-c049-56fe-b733-cc86afb24ad7","excerpt":"React-Router  Router.js 에 경로지정, 지정된 경로대로 컴포넌트를 화면에 그리는 방법 \n현재 사용하고 작업 하고있는 에디터 (VScode, 등…) 에서 터미널을 오픈 한 다음 설치가 되었다면 npm install react-router-dom 을 입력해주면 설치 할 수 있다.  \n\n설치가 되었다면 src 폴더에 index.js 파일이 위치해 있는 같은곳에 Router.js 파일 하나를 만들어 준다.\n\nRouter.js 파일을 만들어야 하는 이유는 sign up 띄우거나 log in 을 띄워야한다면 index.js 에서 매번 랜더링 할 컴포넌트를 매번 수정해야 하고 컴포넌트 별로 경로 설정 또한 할 수 가 없다.\n Router.js 파일은 다른 파일에서 import 하기 때문에 export 가 필요하다. \n만들어 놓은 컴포넌트에 대해 간략하게 설명하면 BrowserRouter 컴포넌트는 경로 변경에 대해 여러 편의기능을 제공해주는 컴포넌트인데 대표적으로 페이지가 새…","fields":{"slug":"/react-blog/router/"},"frontmatter":{"categories":"React","title":"React-Router","date":"April 20, 2023"}},"next":{"fields":{"slug":"/react-blog/sideEffect/"}},"previous":null},{"node":{"id":"3086ab98-24de-56d9-bd06-a8d147431112","excerpt":"React 함수 컴포넌트의 side effect  함수 컴포넌트에서의 input 과 output 리액트에서 렌더링이랑 state 랑 proprs 를 기반으로 UI를 그려내는 행위 이다. 리액트에서 UI 를 컴포넌트 단위로 구성하고, 그 컴포넌트는 함수 컴포넌트를 이용해서 만들 수 있다.(함수의 본질은 input 을 바다서 output을 출력 하는것)\n  리액트의 함수 컴포넌트 본질은 무엇일까 ?  함수 컴포넌트는 state 그리고 props 를 통해서 JSX 를 만들어내는 것이 본질적인 역할이다.\n즉, 함수 컴포넌트의 input 은 state 그리고 props 라고 할 수 있고, output 은 JSX 라고 할 수 있다. 이를 식으로 표현 하면, (state,props) => JSX\n  (엄밀히 말하면 리액트의 함수 컴포넌트는 인자로 props 만을 받고 state는 인자로 받는것이 아니라 useState hook 을 통해서 꺼내오지만, 개념상으로 봤을때는 state 그리고 pro…","fields":{"slug":"/react-blog/sideEffect/"},"frontmatter":{"categories":"React","title":"React-Side Effect","date":"April 20, 2023"}},"next":{"fields":{"slug":"/react-blog/intro/"}},"previous":{"fields":{"slug":"/react-blog/router/"}}},{"node":{"id":"9a24676c-e4ca-5da3-be6f-cd33b7590c89","excerpt":"React  meta 에서 개발한 오픈 소스 자바스크립트 라이브러리. Web Application 의 발전 우리가 사용하는 사이트에는 보이는 것 (UI: User Interface) 과 할 수 있는 것 (UX: User Experience) 이 많다.\n뿐만 아니라 문서 작성, 쇼핑, SNS, 게임 등의 기능을 웹 브라우저에서 이용할 수 있다. 이처럼 사용자가 별도의 응용 소프트웨어 (어플리케이션) 를 설치하지 않아도 웹 브라우저를 통해 응용 소프트웨어의 기능을 이용 할 수 있도록 만든 웹 서비스를 웹 어플리케이션 ( Web Application ) 이라고 한다. 이러한 이유로, 현대의 대다수 웹 서비스는 웹 페이지라는 단어보다 웹 어플리케이션이라는 단어가 많이 사용 되고 있다.\n\n\n과거의 웹 페이지는 UI 가 단순하고 검색어 및 회원정보 입력, 항목 클릭 등 비교적 상호작용이 적었던거에 비해 현재의 웹 어플리케이션은 동적이고 다양한 UI 를 가지며 카테고리 hover 이벤트, 좋아…","fields":{"slug":"/react-blog/intro/"},"frontmatter":{"categories":"React","title":"React-intro","date":"April 20, 2023"}},"next":{"fields":{"slug":"/gatsby-github-blog/aws/"}},"previous":{"fields":{"slug":"/react-blog/sideEffect/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}