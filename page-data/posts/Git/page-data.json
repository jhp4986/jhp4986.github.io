{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Git","result":{"pageContext":{"currentCategory":"Git","categories":["All","TypeScript","Retrospective","React","AWS","Git","HTML&CSS"],"edges":[{"node":{"id":"1f9a9119-160f-5c2c-8de2-e2708cac887c","excerpt":"Git⬇️ git 은 컴포터 파일의 변경 사항을 추적 하고 여러 명의 사용자들 간에 해당 파일들의 작업을 조율하기 위한 분산 버전 관리 시스템 이다.\nLocal 에서 본인의 개발 소스를 관리 할 수 있고 원격 저장소에 영구 적으로 백업 할 수 있고 다양한 협업이 가능 하도록 지원한다. Git 순서⬇️ Git workflow⬇️ \n\n Git 용어 정리 ⬇️ git 에서 프로젝트를 저장 할 수 있고, 함께 프로젝트를 진행하는 팀원 이 있다면 팀원들과 공유 할 수 있는곳 (공유폴더)\nPM 이 스프링 프로젝트 세팅을 한 후 다른 팀원들이 git clone 을 받을 수 있도록 repository 를 생성 한다. git init 또는 git clone 으로 기존 github 에 있는 저장소를 내 로컬로 가져온다. 개인의 Laptop 또는 Desktop 외부의 github 저장소가 있는 url 에 대한 alias(별칭) 을 만들어 관리하기 위한 명령어. (이 명령어는 단순히 github 만을 위한 것…","fields":{"slug":"/gatsby-github-blog/git/"},"frontmatter":{"categories":"Git","title":"Git-순서 와 명령어 정리","date":"April 19, 2023"}},"next":{"fields":{"slug":"/css-blog/"}},"previous":{"fields":{"slug":"/gatsby-github-blog/aws/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}